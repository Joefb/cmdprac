#!/bin/bash

# cmdprac
# Written by: Joe Burgess
#
# This script is used for practicing commands.
# See README for more info

# Create array to store learning array index numbers
declare -a rand_arr=()

##### functions #######

# intro screen
intro_scrn() {
  clear
  toilet "${Cm_nm} command practice"
  echo "Welcome to cmdprac! This script will help you learn"
  echo "common ${Cm_nm} commands. Enjoy!"
  echo "Press enter to continue"
  read -r
  clear
  ask_quest
}

# exit screen
exit_scrn() {
  clear
  toilet "Good Job!"
  echo "Your ${Cm_nm} wizardry skills have increased!"
  echo "Would you like to try again? (y)es (n)o"
  read -r exita

  if [ "${exita}" == "y" ]; then
    clear
    toilet "WooHoo!"
    echo "Lets do some more ${Cm_nm} learning!"
    echo "Press enter to continue"
    read -r
    clear
    ask_quest

    else
      toilet "Have a good day!"
    exit
  fi
}

# help screen
help_scrn() {
  echo
  echo "cmdprac help"
  echo "Usage: cmdprac [OPTION] FILE"
  echo
  echo "Options:"
  echo "--help     Display this help"
  echo "--ls       List learning arrays"
  echo
  echo "The learning arrays are stored in the learning-arrs directory"
  echo "Example: cmdprac learn-apt"
}

# iterate array to ask questions
ask_quest() {
  # store ques array indexes
  for ele in "${!ques[@]}"; do
    rand_arr+=("${ele}")
  done
  # shuffle elements to randomize questions
  rand_arr=( $(shuf -e "${rand_arr[@]}") )

  # ask questions
  for idx in "${rand_arr[@]}"; do
    answr=""
    x=true
    y=3

    while [ "$x" == true ]; do
      echo
      echo "${ques[$idx]}"
      read -r answr

      # check answer
      if [ "${answr}" == "${answ[idx]}" ]; then
        echo "Correct!"
        x=false
      else
          echo "Answer is not correct. Try again"
          ((y=y-1))
          echo "Tries left: " "${y}"
      fi

      # check number of tries and give answer
      if [[ "$y" -eq 0 ]]; then
        echo
        echo "The correct answer is \"${answ[idx]}\""
        y=3
        echo "Press enter to try again"
        read -r
        clear
      fi
    done
  done
  exit_scrn
}


#### Options ###
if [[ "${1}" == "--help" || -z "${1}" ]]; then
  help_scrn
elif [[ "${1}" == "--ls" ]]; then
  ls ./learning-arrs
elif [[  -e "./learning-arrs/${1}" ]]; then
  source ./learning-arrs/"${1}"
  intro_scrn
else
  echo "${1} was not found in learning-arrs directory."
  echo "Use cmdprac --help for more info."
fi

# Load intro screen and start program
#intro_scrn
